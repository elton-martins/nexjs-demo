{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elton\\\\react-projects\\\\nextjs-project1\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.image,\n    title: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://eltonmartins:6jl98sAf3Dh5WQVa@cluster0.tmm2b.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://eltonmartins:6jl98sAf3Dh5WQVa@cluster0.tmm2b.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const selectedMeetup = await meetupCollection.findOne({\n    _id: meetupId\n  });\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/Elton/react-projects/nextjs-project1/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","props","image","title","address","description","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","meetupData"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAEA,KAAK,CAACC,KADjB;AAEI,IAAA,KAAK,EAAED,KAAK,CAACE,KAFjB;AAGI,IAAA,OAAO,EAAEF,KAAK,CAACG,OAHnB;AAII,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACjB,4GADiB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC5BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADoB,KAAb,CAAZ;AAFJ,GAAP;AAMH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACjB,4GADiB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMe,cAAc,GAAG,MAAMhB,gBAAgB,CAACiB,OAAjB,CAAyB;AAAEb,IAAAA,GAAG,EAAEQ;AAAP,GAAzB,CAA7B;AAEA,SAAO;AACHrB,IAAAA,KAAK,EAAE;AACH2B,MAAAA,UAAU,EAAEF;AADT;AADJ,GAAP;AAKH;AAED,eAAe1B,aAAf","sourcesContent":["import { MongoClient } from 'mongodb'\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail'\r\n\r\nfunction MeetupDetails(props) {\r\n    return (\r\n        <MeetupDetail\r\n            image={props.image}\r\n            title={props.title}\r\n            address={props.address}\r\n            description={props.description}\r\n        />\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://eltonmartins:6jl98sAf3Dh5WQVa@cluster0.tmm2b.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    )\r\n\r\n    const db = client.db()\r\n\r\n    const meetupCollection = db.collection('meetups')\r\n    const meetups = await meetupCollection.find({}, { _id: 1 }).toArray()\r\n\r\n    client.close()\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map((meetup) => ({\r\n            params: { meetupId: meetup._id.toString() },\r\n        })),\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId\r\n\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://eltonmartins:6jl98sAf3Dh5WQVa@cluster0.tmm2b.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    )\r\n\r\n    const db = client.db()\r\n\r\n    const meetupCollection = db.collection('meetups')\r\n\r\n    const selectedMeetup = await meetupCollection.findOne({ _id: meetupId })\r\n\r\n    return {\r\n        props: {\r\n            meetupData: selectedMeetup,\r\n        },\r\n    }\r\n}\r\n\r\nexport default MeetupDetails\r\n"]},"metadata":{},"sourceType":"module"}